import random
import asyncio
import re  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
from .. import loader
from hikkatl.types import Message

@loader.tds
class NarutoAdventureFoodMod(loader.Module):
    """–ê–≤—Ç–æ —Ä–µ–π–¥—ã –Ω–∞—Ö—É–π"""

    strings = {"name": "NarutoAdventureFood"}

    def init(self):

    def init(self):
        self.status_one_active = True  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–µ–Ω
        self.status_two_active = False  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—Ç–æ—Ä–æ–π —Å—Ç–∞—Ç—É—Å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
        self.status_three_active = False  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ç—Ä–µ—Ç–∏–π —Å—Ç–∞—Ç—É—Å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
        self.limit_active = False  # –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å—Ç–∞—Ç—É—Å –ª–∏–º–∏—Ç–∞ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω

    async def client_ready(self, client, db):
        self.client = client

    async def statusonecmd(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π"""
        self.status_one_active = True
        self.status_two_active = False
        self.status_three_active = False
        await self.client.send_message(message.sender_id, "–ü–µ—Ä–≤—ã–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π —Å—Ç–∞—Ç—É—Å –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

    async def limitoffcmd(self, message: Message):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ª–∏–º–∏—Ç–∞"""
        self.limit_active = False
        await self.client.send_message(message.sender_id, "–°—Ç–∞—Ç—É—Å –ª–∏–º–∏—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω.")

    async def statustwocmd(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤—Ç–æ—Ä–æ–π —Å—Ç–∞—Ç—É—Å –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–µ—Ä–≤—ã–π –∏ —Ç—Ä–µ—Ç–∏–π"""
        self.status_one_active = False
        self.status_two_active = True
        self.status_three_active = False
        await self.client.send_message(message.sender_id, "–í—Ç–æ—Ä–æ–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ü–µ—Ä–≤—ã–π –∏ —Ç—Ä–µ—Ç–∏–π —Å—Ç–∞—Ç—É—Å –æ—Ç–∫–ª—é—á–µ–Ω—ã.")

    async def statusthreecmd(self, message: Message):
        """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç —Ç—Ä–µ—Ç–∏–π —Å—Ç–∞—Ç—É—Å –∏ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–µ—Ä–≤—ã–π –∏ –≤—Ç–æ—Ä–æ–π"""
        self.status_one_active = False
        self.status_two_active = False
        self.status_three_active = True
        await self.client.send_message(message.sender_id, "–¢—Ä–µ—Ç–∏–π —Å—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ü–µ—Ä–≤—ã–π –∏ –≤—Ç–æ—Ä–æ–π —Å—Ç–∞—Ç—É—Å –æ—Ç–∫–ª—é—á–µ–Ω—ã.")
        
    @loader.watcher()
    async def watcher(self, message):
        if message.sender_id == 6745912139:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç –¥–µ—Ä–µ–≤–Ω–∏
            if "üó∫ –£—Ä–æ–≤–µ–Ω—å –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç –¥–µ—Ä–µ–≤–Ω–∏: 16" in message.raw_text:
                # –≠—Ç–æ—Ç –±–ª–æ–∫ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–π
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 1 and len(message.reply_markup.rows[1].buttons) > 0:
                        button_text = message.reply_markup.rows[1].buttons[0].text  # –¢–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(4, 9))
                        await self.client.send_message(message.sender_id, button_text)
                return  # –ù–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ –¥–ª—è –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏

            if "üèö –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å" in message.raw_text:
                if self.status_one_active and message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –ò–Ω–¥–µ–∫—Å [0][0] –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 3))
                        await self.client.send_message(message.sender_id, button_text)

                elif self.status_two_active and message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 1 and len(message.reply_markup.rows[1].buttons) > 0:
                        button_text = message.reply_markup.rows[1].buttons[0].text  # –ò–Ω–¥–µ–∫—Å [1][0] –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 3))
                        await self.client.send_message(message.sender_id, button_text)

                elif self.status_three_active:
                    await asyncio.sleep(random.uniform(1, 3))  # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
                    await self.client.send_message(message.sender_id, "399")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "399"
                
            hunger_match = re.search(r"üçú –í–∞—à–∞ —Å—ã—Ç–æ—Å—Ç—å: (\d+)", message.raw_text)
            if hunger_match:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—ã—Ç–æ—Å—Ç–∏
                hunger_value = int(hunger_match.group(1))

                # –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å –±–æ–ª—å—à–µ 8
                if hunger_value > 8:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                    if message.reply_markup and message.reply_markup.rows:
                        if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                            button_text = message.reply_markup.rows[0].buttons[0].text
                            await asyncio.sleep(random.uniform(1, 7))
                            await self.client.send_message(message.sender_id, button_text)
                else:
                    # –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å 8 –∏–ª–∏ –º–µ–Ω—å—à–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—ã—Ç–æ—Å—Ç—å"
                    if "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—ã—Ç–æ—Å—Ç—å" in message.raw_text:
                        await asyncio.sleep(random.uniform(1, 3))
                        await self.client.send_message(message.sender_id, "/food1")
                    else:
                        # –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å 8 –∏–ª–∏ –º–µ–Ω—å—à–µ –∏ –Ω–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        if message.reply_markup and message.reply_markup.rows:
                            if len(message.reply_markup.rows) > 1 and len(message.reply_markup.rows[1].buttons) > 0:
                                button_text = message.reply_markup.rows[1].buttons[0].text  # –ò–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
                                await asyncio.sleep(random.uniform(1, 7))
                                await self.client.send_message(message.sender_id, button_text)

            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∑–∞–ø—Ä–æ—Å–æ–º –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥—ã
            quantity_match = re.search(r"–°–∫–æ–ª—å–∫–æ –µ–¥—ã —ç—Ç–æ–≥–æ —Ç–∏–ø–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å\? \(—É –≤–∞—Å –µ—Å—Ç—å (\d+)\)", message.raw_text)
            
            if quantity_match:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                available_quantity = int(quantity_match.group(1))

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º 10 –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ–ª—å—à–µ 10, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                quantity_to_send = min(available_quantity, 10)

                await asyncio.sleep(random.uniform(1, 7))
                await self.client.send_message(message.sender_id, str(quantity_to_send))
                
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –¥–µ—Ä–µ–≤–Ω—é?"
            if "‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –¥–µ—Ä–µ–≤–Ω—é?" in message.raw_text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(4, 9))
                        await self.client.send_message(message.sender_id, button_text)
                        await asyncio.sleep(random.uniform(5, 30))
                        await self.client.send_message(message.sender_id, "/raid")

            if "‚ùå –£ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–¥—É–∫—Ç—ã, –∑–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ!" in message.raw_text:
                self.limit_active = True
                
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ª–∏–º–∏—Ç–∞ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—ã–±–æ—Ä–∞ –µ–¥—ã
            if "‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –µ–¥—É" in message.raw_text:
                if self.limit_active:
                    return  # –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è, –µ—Å–ª–∏ –ª–∏–º–∏—Ç –∞–∫—Ç–∏–≤–µ–Ω

                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 1:
                        button_text = message.reply_markup.rows[0].buttons[1].text  # –¢–µ–∫—Å—Ç —Å–æ –≤—Ç–æ—Ä–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        delay = random.uniform(2, 7)
                        await asyncio.sleep(delay)
                        await self.client.send_message(message.sender_id, button_text)
                        
            if "‚ùå –í—ã —É–∂–µ —Å—ã—Ç—ã!" in message.raw_text:
                delay = random.uniform(2, 7) 
                await asyncio.sleep(delay) 
                await self.client.send_message(message.sender_id, "/raid")
        
            food_match = re.search(r"üç• –í—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –¥–æ 10 –µ–¥. –µ–¥—ã, –≤—ã –≤–∑—è–ª–∏ (\d+).", message.raw_text)
            
            if food_match:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥—ã
                food_value = int(food_match.group(1))

                # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥—ã —Ä–∞–≤–Ω–æ –Ω—É–ª—é, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                if food_value == 0:
                    if message.reply_markup and message.reply_markup.rows:
                        if len(message.reply_markup.rows) > 1 and len(message.reply_markup.rows[1].buttons) > 0:
                            button_text = message.reply_markup.rows[1].buttons[0].text
                            await asyncio.sleep(random.uniform(1, 4))
                            await self.client.send_message(message.sender_id, button_text)
                # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥—ã –±–æ–ª—å—à–µ –Ω—É–ª—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                else:
                    if message.reply_markup and message.reply_markup.rows:
                        if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                            button_text = message.reply_markup.rows[0].buttons[0].text
                            await asyncio.sleep(random.uniform(1, 7))
                            await self.client.send_message(message.sender_id, button_text)

            
            if "–í –æ–¥–Ω–æ–º –∏–∑ –≥–æ—Ä–æ–¥–æ–≤, –≥–¥–µ –≤—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å, –≤—ã –Ω–∞—à–ª–∏ –æ–Ω—Å—ç–Ω. –ê–±–æ–Ω–µ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç 2 –º–ª–Ω —Ä—ë." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ reply_markup –∏ –µ–≥–æ —Å—Ç—Ä–æ–∫
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç—Ä–æ–∫–∏ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 1 –∫–Ω–æ–ø–∫–∞
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[1].buttons[0].text  # –ò–Ω–¥–µ–∫—Å [1][0] –¥–ª—è –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ù–∞ –æ–∫—Ä–∞–∏–Ω–µ –¥–µ—Ä–µ–≤–Ω–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç–∞—Ä—ã–π –∫–æ–ª–æ–¥–µ—Ü, —É–≤–∏—Ç—ã–π –≥–ª–∏—Ü–∏–Ω–∏—è–º–∏. –ú–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏ –≤–∞–º, —á—Ç–æ –µ—Å–ª–∏ –∑–∞–≥–∞–¥–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∏ –±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É, —Ç–æ —Å—É–¥—å–±–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤–µ–¥–µ—Ç –≤–∞—Å —Å —Ç–µ–º, –∫–æ–≥–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ reply_markup –∏ –µ–≥–æ —Å—Ç—Ä–æ–∫
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç—Ä–æ–∫–∏ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 1 –∫–Ω–æ–ø–∫–∞
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –ò–Ω–¥–µ–∫—Å [0][0] –¥–ª—è –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –±—ã–ª–∞ —Å–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –ø–æ–¥–æ–±–Ω–∞—è —Ç–æ—á–∫–∞ –≤ —Å—Ç—Ä–∞–Ω–µ." in message.raw_text:
                if message.reply_markup:
                    if message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫
                        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í–æ –≤—Ä–µ–º—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –≤ —Ç–µ–Ω–∏ –¥–µ—Ä–µ–≤–∞ –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ –≤ —Ç—Ä–∞–≤–µ –∫–∞–∫–æ–π-—Ç–æ –±–ª–µ—Å–∫." in message.raw_text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ –æ–±–ª–æ–º–æ–∫ –º–∞—Å–∫–∏ –æ–Ω–∏, –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É —É—à–µ–¥—à–∏–π –≤ –º—è–≥–∫–∏–π —Ä–µ—á–Ω–æ–π –∏–ª. –ë–µ–ª–∞—è –≥–ª–∏–Ω–∞ –ø–æ—Ç—Ä–µ—Å–∫–∞–ª–∞—Å—å –∏ –ø–æ—Ç–µ–º–Ω–µ–ª–∞ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –µ—â–µ –≤–∏–¥–Ω—ã –±—É—Ä—ã–µ –ø—è—Ç–Ω–∞, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –∑–∞—Å–æ—Ö—à—É—é –∫—Ä–æ–≤—å. " in message.raw_text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ü–æ –¥–æ—Ä–æ–≥–µ –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ –ª–µ–∂–∞—â–µ–≥–æ –Ω–∞ –æ–±–æ—á–∏–Ω–µ —á–µ–ª–æ–≤–µ–∫–∞. –ü—Ä–∏–±–ª–∏–∑–∏–≤—à–∏—Å—å, –≤—ã –≤–∏–¥–∏—Ç–µ, —á—Ç–æ –æ–Ω —Ä–∞–Ω–µ–Ω –∏ –±–µ–∑ —Å–æ–∑–Ω–∞–Ω–∏—è." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–µ
                    if len(message.reply_markup.rows) > 2 and len(message.reply_markup.rows[2].buttons) > 0:
                        button_text = message.reply_markup.rows[2].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ù–æ—á–Ω–æ–π –≤–µ—Ç–µ—Ä –¥–æ–Ω–æ—Å–∏—Ç –¥–æ –≤–∞—Å —Å—Ç—Ä–∞–Ω–Ω—ã–π –∞—Ä–æ–º–∞—Ç - —Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–π –∏ —Ç—è–∂–µ–ª—ã–π, –æ–Ω –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –±–ª–∞–≥–æ–≤–æ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–º–∏ –∂—Ä–µ—Ü—ã –æ–∫—É—Ä–∏–≤–∞—é—Ç –º–µ—Ä—Ç–≤–µ—Ü–æ–≤ –ø–µ—Ä–µ–¥ –ø–æ–≥—Ä–µ–±–µ–Ω–∏–µ–º." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ–∂–¥–µ
            if "–î–æ–∂–¥—å –±–µ–∑–∂–∞–ª–æ—Å—Ç–Ω–æ —Ö–ª–µ—â–µ—Ç –≤–∞—à–µ –ª–∏—Ü–æ, —Ç–µ–ª–æ –ø—Ä–æ–±–∏–≤–∞–µ—Ç –æ–∑–Ω–æ–±. –í—ã –¥—Ä–æ–∂–∏—Ç–µ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç–µ –∏–¥—Ç–∏, —Å—Ç–∞—Ä–∞—è—Å—å –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏—è –Ω–∞ –≥–æ—Ä—è—á–∫—É —Å –µ—ë –∫–∏—Å–ª–æ—Ç–Ω—ã–º–∏ –≤–∏–¥–µ–Ω–∏—è–º–∏." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Ç—Ä–µ
            if "–£—Ç—Ä–æ–º –Ω–∞—Å—Ç—É–ø–∞–µ—Ç... —É—Ç—Ä–æ, –∏ —ç—Ç–æ –¥–æ–≤–æ–ª—å–Ω–æ –Ω–µ–æ–±—ã—á–Ω–æ, –µ—Å–ª–∏ —Å–º–∏—Ä–∏—Ç—å—Å—è —Å–æ —Å–≤–æ–µ–π —É—á–∞—Å—Ç—å—é. –í—ã –≤ –±–æ–≥–∞—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ, –ø–∞—Ö–Ω—É—â–µ–π —Å–≤–µ–∂–∏–º–∏ —Ç–∞—Ç–∞–º–∏, —Ä–∏—Å–æ–≤–æ–π –≤–æ–¥–æ–π –∏ –∑–µ–ª–µ–Ω—ã–º —á–∞–µ–º." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —É—Å–∏–ª–∏–∏ –≤–æ–ª–∏
            if "–£—Å–∏–ª–∏–µ–º –≤–æ–ª–∏ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ –æ—á–µ—Ä—Ç–∞–Ω–∏—è –∏ –∫–æ–º–Ω–∞—Ç—ã, –∏ –¥–µ–≤—É—à–∫–∏." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –º–∏–º–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–≥–æ —Å–∞–¥–∞ —Å–∞–∫—É—Ä—ã –≤ –ø–æ–ª–Ω–æ–º —Ü–≤–µ—Ç—É." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if message.reply_markup.rows and message.reply_markup.rows[0].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í–æ –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ —Ä–µ–∫—É –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ —Å—Ç—Ä–∞–Ω–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ, –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É —Å–∫—Ä—ã—Ç–æ–µ –≤ –≤–æ–¥–µ." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if message.reply_markup.rows and message.reply_markup.rows[0].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ü—Ä–æ—Ö–æ–¥—è —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –¥–µ—Ä–µ–≤–Ω—é, –≤—ã –Ω–∞—Ç—ã–∫–∞–µ—Ç–µ—Å—å –Ω–∞ —É–ª–∏—á–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ—Å—Ç–∏." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[1].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í–æ –≤—Ä–µ–º—è –≤–∞—à–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –≤—ã –Ω–∞—Ç—ã–∫–∞–µ—Ç–µ—Å—å –Ω–∞ —Å–∫—Ä—ã—Ç—ã–π –≥–æ—Ä—è—á–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if message.reply_markup.rows and message.reply_markup.rows[0].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)


            if "–ù–∞ –ª–µ—Å–Ω–æ–π —Ç—Ä–æ–ø–∏–Ω–∫–µ –≤—ã –≤—Å—Ç—Ä–µ—á–∞–µ—Ç–µ –ø–ª–∞—á—É—â–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[1].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í—ã –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –≤ –Ω–µ–±–æ–ª—å—à—É—é –¥–µ—Ä–µ–≤–Ω—é, –≥–¥–µ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä—ã–Ω–æ—á–Ω—ã–π –¥–µ–Ω—å." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if message.reply_markup.rows and message.reply_markup.rows[0].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í–æ –≤—Ä–µ–º—è –ø—Ä–∏–≤–∞–ª–∞ –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ –ø–æ–ª—è–Ω—É —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ —Ç—Ä–∞–≤–∞–º–∏." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if message.reply_markup.rows and message.reply_markup.rows[0].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í–æ –≤—Ä–µ–º—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –≤—ã –Ω–∞—Ç—ã–∫–∞–µ—Ç–µ—Å—å –Ω–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–Ω—É—é —Ä–∞–º–µ–Ω–Ω—É—é." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if message.reply_markup.rows and message.reply_markup.rows[0].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ù–∞ –¥–æ—Ä–æ–≥–µ –≤—ã –≤—Å—Ç—Ä–µ—á–∞–µ—Ç–µ —Å—Ç—Ä–∞–Ω—Å—Ç–≤—É—é—â–µ–≥–æ –º—É–∑—ã–∫–∞–Ω—Ç–∞." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[1].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –æ —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ –¢–∞–Ω–∞–±–∞—Ç–∞
            if "–í—ã –ø—Ä–∏–±—ã–≤–∞–µ—Ç–µ –≤ –Ω–µ–±–æ–ª—å—à—É—é –¥–µ—Ä–µ–≤–Ω—é –∫–∞–∫ —Ä–∞–∑ –≤ –¥–µ–Ω—å —Ñ–µ—Å—Ç–∏–≤–∞–ª—è –¢–∞–Ω–∞–±–∞—Ç–∞." in message.raw_text:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(1, 7))
                        await self.client.send_message(message.sender_id, button_text)
