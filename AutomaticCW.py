#by @ZEPHYR0 (–ø—Ä–æ—Å—Ç–æ —Å–ø–∏–∑–¥–∏–ª –º–æ–¥—É–ª—å)
#—Å–ø–∏–∑–¥–∏–ª –≤–æ –±–ª–∞–≥–æ

import random 
from .. import loader, utils 
from telethon import functions 
from telethon.tl.types import Message 
 
@loader.tds 
class AutoCWMod(loader.Module): 
 """—Ç—ã –ª–æ—Ö""" 
 strings = { 
  'name': 'AutoCW', 
  'cwon': '<code>‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è CityWars –≤–∫–ª—é—á–µ–Ω–∞</code>', 
  'cwon_already': '<i>–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ</i>', 
  'cwoff': '<code> –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è CityWars –≤—ã–∫–ª—é—á–µ–Ω–∞.</code>\n<b>–¢—ã –ª–æ—Ö</b>,
  'sending': '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...'
  'sended': '‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω!'
  'actions': 'üïπ –î–µ–π—Å—Ç–≤–∏—è',
  'heal': 'üöë –õ–µ—á–∏–º',
  'patrol': 'üëÆ –ü–∞—Ç—Ä—É–ª–∏—Ä—É–µ–º',
  'rob': 'üè™ –ì—Ä–∞–±–∏–º'
 } 

 def __init__(self): 
  self.name = self.strings['name'] 
   
 async def client_ready(self, client, db): 
  self.client = client 
  self.db = db 
  self.myid = (await client.get_me()).id 
  self.city = 5505560402

 async def cwoncmd(self, message): 
  """–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é""" 
  status = self.db.get(self.name, "status", False);
  if status: return await message.edit(self.strings['cwon_already']);
  self.db.set(self.name, "status", True);
  await message.edit(self.strings['cwon']);

 async def cwoffcmd(self, message): 
  """–í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, –ª–æ–ª""" 
  self.db.set(self.name, 'status', False);
  await message.edit(self.strings['cwoff']);

 async def healcmd(self, message):
    await sleep(1);
    await self.client.send_message(self.city, self.strings['actions']);
    await sleep(1);
    await message.edit(self.strings['sending']);
    await sleep(1);
    await self.client.send_message(self.city, self.strings['heal']);
    await sleep(1);
    await message.edit(self.strings['sended']);

 async def watcher(self, message): 
  #–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–∞—Ç—Ä—É–ª—è/–ª–µ—á–∫–∏
  if message.sender_id == 5505560402:
   if "üëÆ –¢—ã –æ—Ç–¥–æ—Ö–Ω—É–ª" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.city, self.strings['actions']);
    await sleep(1);
    await self.client.send_message(self.city, self.strings['patrol']);
   elif "üëÆ –ù–∞ —É–ª–∏—Ü–∞—Ö" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.city, self.strings['actions']);
    await sleep(1);
    await self.client.send_message(self.city, self.strings['patrol']);
   if "üöë –¢—ã –æ—Ç–¥–æ—Ö–Ω—É–ª" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.city, self.strings['actions']);
    await sleep(1);
    await self.client.send_message(self.city, self.strings['heal']);
   elif "üöë C–æ—Å—Ç–æ—è–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.city, self.strings['actions']);
    await sleep(1);
    await self.client.send_message(self.city, self.strings['heal']);

   
