import random
import asyncio
import re
from .. import loader
from hikkatl.types import Message

@loader.tds
class NarutoAdventureMod(loader.Module):
    """–ê–≤—Ç–æ —Ä–µ–π–¥—ã –Ω–∞—Ö—É–π"""

    strings = {"name": "NarutoAdventure"}

    def init(self):
        self.limit_active = False

    async def client_ready(self, client, db):
        self.client = client

    async def limitoffcmd(self, message: Message):
        self.limit_active = False
        await self.client.send_message(message.sender_id, "–°—Ç–∞—Ç—É—Å –ª–∏–º–∏—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω.")

    async def send_button_text(self, message, button_index):
        if (message.reply_markup and 
            len(message.reply_markup.rows) > button_index and 
            message.reply_markup.rows[button_index].buttons):
            button_text = message.reply_markup.rows[button_index].buttons[0].text
            await asyncio.sleep(random.uniform(2, 4))
            await self.client.send_message(message.sender_id, button_text)

    async def check_message(self, message, patterns):
        for pattern, button_index in patterns.items():
            if re.search(pattern, message.raw_text) and not self.limit_active:
                await self.send_button_text(message, button_index)
                return

    @loader.watcher()
    async def watcher(self, message):
        if message.sender_id != 6745912139:
            return
        
        patterns = {
            r"üó∫ –£—Ä–æ–≤–µ–Ω—å –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –æ—Ç –¥–µ—Ä–µ–≤–Ω–∏: 16": 1,
            r"‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –µ–¥—É": 0,
            r"üçú –ü–µ—Ä–µ–¥ –≤—ã–ª–∞–∑–∫–æ–π, –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –µ–¥—É —Å —Å–æ–±–æ–π.": 0,
            r"üèö –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å": 1,
            r"–í –æ–¥–Ω–æ–º –∏–∑ –≥–æ—Ä–æ–¥–æ–≤, –≥–¥–µ –≤—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å, –≤—ã –Ω–∞—à–ª–∏ –æ–Ω—Å—ç–Ω. –ê–±–æ–Ω–µ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç 2 –º–ª–Ω —Ä—ë.": 1,
            r"–ù–∞ –æ–∫—Ä–∞–∏–Ω–µ –¥–µ—Ä–µ–≤–Ω–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç–∞—Ä—ã–π –∫–æ–ª–æ–¥–µ—Ü, —É–≤–∏—Ç—ã–π –≥–ª–∏—Ü–∏–Ω–∏—è–º–∏.": 0,
            r"–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –±—ã–ª–∞ —Å–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –ø–æ–¥–æ–±–Ω–∞—è —Ç–æ—á–∫–∞ –≤ —Å—Ç—Ä–∞–Ω–µ.": 0,
            r"–í–æ –≤—Ä–µ–º—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –≤ —Ç–µ–Ω–∏ –¥–µ—Ä–µ–≤–∞ –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ –≤ —Ç—Ä–∞–≤–µ –∫–∞–∫–æ–π-—Ç–æ –±–ª–µ—Å–∫.": 0,
            r"–î–æ–∂–¥—å –±–µ–∑–∂–∞–ª–æ—Å—Ç–Ω–æ —Ö–ª–µ—â–µ—Ç –≤–∞—à–µ –ª–∏—Ü–æ.": 0,
            r"–£—Ç—Ä–æ–º –Ω–∞—Å—Ç—É–ø–∞–µ—Ç.*": 0,
            r"–£—Å–∏–ª–∏–µ–º –≤–æ–ª–∏ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ.": 0,
            r"–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ –æ–±–ª–æ–º–æ–∫ –º–∞—Å–∫–∏.": 0,
            r"–ü–æ –¥–æ—Ä–æ–≥–µ –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ –ª–µ–∂–∞—â–µ–≥–æ –Ω–∞ –æ–±–æ—á–∏–Ω–µ —á–µ–ª–æ–≤–µ–∫–∞.": 2
        }

        await self.check_message(message, patterns)

        hunger_match = re.search(r"üçú –í–∞—à–∞ —Å—ã—Ç–æ—Å—Ç—å: (\d+)", message.raw_text)
        if hunger_match:
            hunger_value = int(hunger_match.group(1))
            button_index = 0 if hunger_value > 8 else 1
            await self.send_button_text(message, button_index)

        if "‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –¥–µ—Ä–µ–≤–Ω—é?" in message.raw_text:
            await self.send_button_text(message, 0)
            await asyncio.sleep(random.uniform(2, 4))
            await self.client.send_message(message.sender_id, "üçú –ö–≤–∞—Ä—Ç–∞–ª —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤")

        if "‚ùå –£ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–¥—É–∫—Ç—ã, –∑–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ!" in message.raw_text:
            self.limit_active = True

        if "‚ùå –í—ã —É–∂–µ —Å—ã—Ç—ã!" in message.raw_text:
            await asyncio.sleep(random.uniform(2, 7))
            await self.client.send_message(message.sender_id, "/raid")
