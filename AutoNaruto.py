import random
import asyncio
import re  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
from .. import loader
from hikkatl.types import Message

@loader.tds
class NarutoAdventureMod(loader.Module):
    """–ê–≤—Ç–æ —Ä–µ–π–¥—ã –Ω–∞—Ö—É–π"""

    strings = {"name": "NarutoAdventure"}

    async def client_ready(self, client, db):
        self.client = client

    @loader.watcher()
    async def watcher(self, message):
        if message.sender_id == 6745912139:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—ã—Ç–æ—Å—Ç—å
            hunger_match = re.search(r"üçú –í–∞—à–∞ —Å—ã—Ç–æ—Å—Ç—å: (\d+)", message.raw_text)
            if hunger_match:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—ã—Ç–æ—Å—Ç–∏
                hunger_value = int(hunger_match.group(1))
                
                if hunger_value > 8:
                    # –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å –±–æ–ª—å—à–µ 8, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                    if message.reply_markup and message.reply_markup.rows:
                        if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                            button_text = message.reply_markup.rows[0].buttons[0].text
                            await asyncio.sleep(random.uniform(2, 4))
                            await self.client.send_message(message.sender_id, button_text)
                else:
                    # –ï—Å–ª–∏ —Å—ã—Ç–æ—Å—Ç—å 8 –∏–ª–∏ –º–µ–Ω—å—à–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                    if message.reply_markup and message.reply_markup.rows:
                        if len(message.reply_markup.rows) > 1 and len(message.reply_markup.rows[1].buttons) > 0:
                            button_text = message.reply_markup.rows[1].buttons[0].text  # –ò–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
                            await asyncio.sleep(random.uniform(2, 4))
                            await self.client.send_message(message.sender_id, button_text)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –¥–µ—Ä–µ–≤–Ω—é?"
            if "‚ùî –í—ã —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –¥–µ—Ä–µ–≤–Ω—é?" in message.raw_text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(2, 4))
                        await self.client.send_message(message.sender_id, button_text)
                        await asyncio.sleep(random.uniform(2, 4))
                        await self.client.send_message(message.sender_id, "üçú –ö–≤–∞—Ä—Ç–∞–ª —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤")

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            if "‚ùî –í—ã–±–µ—Ä–∏—Ç–µ –µ–¥—É" in message.raw_text:
                delay = random.uniform(2, 7)
                await asyncio.sleep(delay)
                await self.client.send_message(message.sender_id, "üç° –î–∞–Ω–≥–æ (17 —ç–Ω–µ—Ä–≥–∏–∏, 40–∫ —Ä—ë)")

            if "‚ùå –í—ã —É–∂–µ —Å—ã—Ç—ã!" in message.raw_text:
                delay = random.uniform(2, 7) 
                await asyncio.sleep(delay) 
                await self.client.send_message(message.sender_id, "/raid")
        
            if "üçú –ü–µ—Ä–µ–¥ –≤—ã–ª–∞–∑–∫–æ–π, –≤—ã –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –µ–¥—É —Å —Å–æ–±–æ–π. –û–Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—ã—Ç–æ—Å—Ç—å –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–π—Ç–∏ –¥–∞–ª—å—à–µ." in message.raw_text:
                if message.reply_markup:
                    if message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫
                        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(2, 7))
                        await self.client.send_message(message.sender_id, button_text)
                      
            if "üèö –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–∞–∫–æ–º —É—Ä–æ–≤–Ω–µ –æ—Ç–¥–∞–ª–µ–Ω–Ω–æ—Å—Ç–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å" in message.raw_text:
                if message.reply_markup:
                    if message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫
                        if len(message.reply_markup.rows) > 1 and len(message.reply_markup.rows[1].buttons) > 1:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 2 –∫–Ω–æ–ø–∫–∏
                            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ç–≤—ë—Ä—Ç–æ–π –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                            button_text = message.reply_markup.rows[1].buttons[1].text  # –ò–Ω–¥–µ–∫—Å [1][1] –¥–ª—è —á–µ—Ç–≤—ë—Ä—Ç–æ–π –∫–Ω–æ–ø–∫–∏
                            await asyncio.sleep(random.uniform(2, 7))
                            await self.client.send_message(message.sender_id, button_text)

            if "–í –æ–¥–Ω–æ–º –∏–∑ –≥–æ—Ä–æ–¥–æ–≤, –≥–¥–µ –≤—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å, –≤—ã –Ω–∞—à–ª–∏ –æ–Ω—Å—ç–Ω. –ê–±–æ–Ω–µ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç 2 –º–ª–Ω —Ä—ë." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ reply_markup –∏ –µ–≥–æ —Å—Ç—Ä–æ–∫
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç—Ä–æ–∫–∏ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 1 –∫–Ω–æ–ø–∫–∞
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[1].buttons[0].text  # –ò–Ω–¥–µ–∫—Å [1][0] –¥–ª—è –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(2, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ù–∞ –æ–∫—Ä–∞–∏–Ω–µ –¥–µ—Ä–µ–≤–Ω–∏ –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç–∞—Ä—ã–π –∫–æ–ª–æ–¥–µ—Ü, —É–≤–∏—Ç—ã–π –≥–ª–∏—Ü–∏–Ω–∏—è–º–∏. –ú–µ—Å—Ç–Ω—ã–µ –∂–∏—Ç–µ–ª–∏ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∏ –≤–∞–º, —á—Ç–æ –µ—Å–ª–∏ –∑–∞–≥–∞–¥–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ –∏ –±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É, —Ç–æ —Å—É–¥—å–±–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤–µ–¥–µ—Ç –≤–∞—Å —Å —Ç–µ–º, –∫–æ–≥–æ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å." in message.raw_text:
                if message.reply_markup and message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ reply_markup –∏ –µ–≥–æ —Å—Ç—Ä–æ–∫
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç—Ä–æ–∫–∏ –µ—Å—Ç—å –º–∏–Ω–∏–º—É–º 1 –∫–Ω–æ–ø–∫–∞
                    if len(message.reply_markup.rows) > 1 and message.reply_markup.rows[1].buttons:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –ò–Ω–¥–µ–∫—Å [0][0] –¥–ª—è –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(2, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ –±—ã–ª–∞ —Å–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –ø–æ–¥–æ–±–Ω–∞—è —Ç–æ—á–∫–∞ –≤ —Å—Ç—Ä–∞–Ω–µ." in message.raw_text:
                if message.reply_markup:
                    if message.reply_markup.rows:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∏ –∫–Ω–æ–ø–æ–∫
                        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
                        button_text = message.reply_markup.rows[0].buttons[0].text
                        await asyncio.sleep(random.uniform(2, 7))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í–æ –≤—Ä–µ–º—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –≤ —Ç–µ–Ω–∏ –¥–µ—Ä–µ–≤–∞ –≤—ã –∑–∞–º–µ—á–∞–µ—Ç–µ –≤ —Ç—Ä–∞–≤–µ –∫–∞–∫–æ–π-—Ç–æ –±–ª–µ—Å–∫." in message.raw_text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(2, 4))
                        await self.client.send_message(message.sender_id, button_text)

            if "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ –æ–±–ª–æ–º–æ–∫ –º–∞—Å–∫–∏ –æ–Ω–∏, –Ω–∞–ø–æ–ª–æ–≤–∏–Ω—É —É—à–µ–¥—à–∏–π –≤ –º—è–≥–∫–∏–π —Ä–µ—á–Ω–æ–π –∏–ª. –ë–µ–ª–∞—è –≥–ª–∏–Ω–∞ –ø–æ—Ç—Ä–µ—Å–∫–∞–ª–∞—Å—å –∏ –ø–æ—Ç–µ–º–Ω–µ–ª–∞ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –µ—â–µ –≤–∏–¥–Ω—ã –±—É—Ä—ã–µ –ø—è—Ç–Ω–∞, –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ –∑–∞—Å–æ—Ö—à—É—é –∫—Ä–æ–≤—å. " in message.raw_text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                if message.reply_markup and message.reply_markup.rows:
                    if len(message.reply_markup.rows) > 0 and len(message.reply_markup.rows[0].buttons) > 0:
                        button_text = message.reply_markup.rows[0].buttons[0].text  # –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                        await asyncio.sleep(random.uniform(2, 4))
                        await self.client.send_message(message.sender_id, button_text)

                 
