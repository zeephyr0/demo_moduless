#by @ZEPHYR0 
#www

import random 
from asyncio import sleep
from .. import loader, utils 
from telethon import functions 
from telethon.tl.types import Message 
 
@loader.tds 
class AutoICMod(loader.Module): 
 """—Ç—ã –ª–æ—Ö""" 
 strings = { 
  'name': 'AutoIC', 
  'icon': '<code>‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è ZephyrGram –≤–∫–ª—é—á–µ–Ω–∞</code>', 
  'icon_already': '<i>–£–∂–µ –∑–∞–ø—É—â–µ–Ω–æ</i>', 
  'icoff': '<code> –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è ZephyrMod –≤—ã–∫–ª—é—á–µ–Ω–∞.</code>\n<b>–¢—ã –ª–æ—Ö</b>',
  'groff_already': '<i>–ú–æ–¥—É–ª—å –≤—ã–∫–ª—é—á–µ–Ω</i>'
 } 

 def init(self): 
  self.name = self.strings['name'] 
   
 async def client_ready(self, client, db): 
  self.client = client 
  self.db = db 
  self.myid = (await client.get_me()).id 
  self.city = 1219677707

 async def iconcmd(self, message): 
  """–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é""" 
  status1 = self.db.get(self.name, "status", False);
  if status1: return await message.edit(self.strings['icon_already']);
  self.db.set(self.name, "status", True);
  await message.edit(self.strings['icon']);

 async def icoffcmd(self, message): 
  """–í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, –ª–æ–ª"""
  self.db.set(self.name, 'status', False);
  await message.edit(self.strings['icoff']);

 async def watcher(self, message): 
  if event.sender_id != self.city:
   if "ü¶à –ü–∏—Ç–æ–º–µ—Ü None –µ—â—ë –Ω–∞ –ø—Ä–æ–≥—É–ª–∫–µ!" in event.raw_text:
    await sleep(3);
    await message.click(2)
