import random 
from .. import loader, utils 
from asyncio import sleep 

@loader.tds 
class TwinCaseSenderMod(loader.Module): 
 strings = {
  'name': 'TwinCaseSender',
  'kt': '–ø–µ—Ä–µ–¥–∞—Ç—å ZEPHYR_god –∫—Ç 1',
  'rkt': '–ø–µ—Ä–µ–¥–∞—Ç—å ZEPHYR_god —Ä–∫—Ç 1',
  'k': '–ø–µ—Ä–µ–¥–∞—Ç—å ZEPHYR_god –∫ 1',
  'rk': '–ø–µ—Ä–µ–¥–∞—Ç—å ZEPHYR_god —Ä–∫ 1',
  'mif': '–ø–µ—Ä–µ–¥–∞—Ç—å ZEPHYR_god –º–∏—Ñ 1',
  'kr': '–ø–µ—Ä–µ–¥–∞—Ç—å ZEPHYR_god –∫—Ä 1'
  } 

 async def client_ready(self, client, db): 
  self.client = client 
  self.db = db 
  self.myid = (await client.get_me()).id 
  self.mine = 5522271758
 
 async def watcher(self, message):

  if message.sender_id == 5522271758:
   if "‚úâ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –∫–æ–Ω–≤–µ—Ä—Ç." in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.mine, self.strings['kt']);
   if "üßß –¢—ã –Ω–∞—à–µ–ª(–ª–∞) —Ä–µ–¥–∫–∏–π –∫–æ–Ω–≤–µ—Ä—Ç." in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.mine, self.strings['rkt']);
   if "üì¶ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ö–µ–π—Å!" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.mine, self.strings['k']);
   if "üó≥ –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –†–µ–¥–∫–∏–π –ö–µ–π—Å!" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.mine, self.strings['rk']);
   if "üïã –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ú–∏—Ñ–∏—á–µ—Å–∫–∏–π –ö–µ–π—Å!" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.mine, self.strings['mif']);
   if "üíé –¢—ã –Ω–∞—à–µ–ª(–ª–∞) –ö—Ä–∏—Å—Ç–∞–ª—å–Ω—ã–π –ö–µ–π—Å!" in message.raw_text:
    await sleep(1);
    await self.client.send_message(self.mine, self.strings['kr']);

  if message.group_id == -1001870697043 and message.sender_id == 920762514:
   if "–ø—Ä–æ–º–æ" in message.raw_text:
    await message.client.send_message(-1001870697043), message, reply_to=await message.get_reply_message() or message)
